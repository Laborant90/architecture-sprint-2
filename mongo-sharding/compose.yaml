services:
  pymongo_api:
    container_name: t2-pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - t2-mongodb1
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.20
    environment:
      MONGODB_URL: "mongodb://t2-mongodb1:27020"
      MONGODB_DATABASE_NAME: "somedb"

  t2-configSrv:
    image: mongo:latest # docker образ
    container_name: t2-configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - t2-config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t2-mongodb1-shard1:
    image: mongo:latest
    container_name: t2-mongodb1-shard1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - t2-mongodb1-shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "t2-mongodb1-shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t2-mongodb1-shard2:
    image: mongo:latest
    container_name: t2-mongodb1-shard2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.14
    volumes:
      - t2-mongodb1-shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "t2-mongodb1-shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t2-mongodb1:
    image: mongo:latest
    container_name: t2-mongodb1
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.17
    command:
      [
        "mongos",
        "--configdb",
        "config_server/t2-configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    name: t2-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/24

name: mongo-sharding
volumes:
  t2-config-data:
  t2-mongodb1-shard1-data:
  t2-mongodb1-shard2-data: