services:
  pymongo_api:
    container_name: t4-pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - t4-mongodb1
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.2.20
    environment:
      MONGODB_URL: "mongodb://t4-mongodb1:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis_1:6379"

  t4-configSrv:
    image: mongo:latest # docker образ
    container_name: t4-configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.2.10
    volumes:
      - t4-config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t4-mongodb1-shard1:
    image: mongo:latest
    container_name: t4-mongodb1-shard1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.2.11
    volumes:
      - t4-mongodb1-shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "t4-mongodb1-shard1-rs",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t4-mongodb1-shard1-repl1:
    image: mongo:latest
    container_name: t4-mongodb1-shard1-repl1
    restart: always
    ports:
      - "27025:27025"
    networks:
      app-network:
        ipv4_address: 173.17.2.12
    volumes:
      - t4-mongodb1-shard1-repl1-data:/data/db
    command:
      [
        "--replSet",
        "t4-mongodb1-shard1-rs",
        "--bind_ip_all",
        "--port",
        "27025"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t4-mongodb1-shard1-repl2:
    image: mongo:latest
    container_name: t4-mongodb1-shard1-repl2
    restart: always
    ports:
      - "27026:27026"
    networks:
      app-network:
        ipv4_address: 173.17.2.13
    volumes:
      - t4-mongodb1-shard1-repl2-data:/data/db
    command:
      [
        "--replSet",
        "t4-mongodb1-shard1-rs",
        "--bind_ip_all",
        "--port",
        "27026"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t4-mongodb1-shard2:
    image: mongo:latest
    container_name: t4-mongodb1-shard2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.2.14
    volumes:
      - t4-mongodb1-shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "t4-mongodb1-shard2-rs",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t4-mongodb1-shard2-repl1:
    image: mongo:latest
    container_name: t4-mongodb1-shard2-repl1
    restart: always
    ports:
      - "27027:27027"
    networks:
      app-network:
        ipv4_address: 173.17.2.15
    volumes:
      - t4-mongodb1-shard2-repl1-data:/data/db
    command:
      [
        "--replSet",
        "t4-mongodb1-shard2-rs",
        "--bind_ip_all",
        "--port",
        "27027"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t4-mongodb1-shard2-repl2:
    image: mongo:latest
    container_name: t4-mongodb1-shard2-repl2
    restart: always
    ports:
      - "27028:27028"
    networks:
      app-network:
        ipv4_address: 173.17.2.16
    volumes:
      - t4-mongodb1-shard2-repl2-data:/data/db
    command:
      [
        "--replSet",
        "t4-mongodb1-shard2-rs",
        "--bind_ip_all",
        "--port",
        "27028"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  t4-mongodb1:
    image: mongo:latest
    container_name: t4-mongodb1
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.2.17
    command:
      [
        "mongos",
        "--configdb",
        "config_server/t4-configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  redis_1:
    image: "redis:latest"
    container_name: redis_1
    ports:
      - "6379"
    volumes:
      - redis_1_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.2.2

  redis_2:
    image: "redis:latest"
    container_name: redis_2
    ports:
      - "6379"
    volumes:
      - redis_2_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.2.3

  redis_3:
    image: "redis:latest"
    container_name: redis_3
    ports:
      - "6379"
    volumes:
      - redis_3_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.2.4

  redis_4:
    image: "redis:latest"
    container_name: redis_4
    ports:
      - "6379"
    volumes:
      - redis_4_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.2.5

  redis_5:
    image: "redis:latest"
    container_name: redis_5
    ports:
      - "6379"
    volumes:
      - redis_5_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.2.6

  redis_6:
    image: "redis:latest"
    container_name: redis_6
    ports:
      - "6379"
    volumes:
      - redis_6_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.2.7


networks:
  app-network:
    name: t4-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.2.0/24

name: sharding-repl-cache
volumes:
  t4-config-data:
  t4-mongodb1-shard1-data:
  t4-mongodb1-shard1-repl1-data:
  t4-mongodb1-shard1-repl2-data:
  t4-mongodb1-shard2-data:
  t4-mongodb1-shard2-repl1-data:
  t4-mongodb1-shard2-repl2-data:
  redis_1_data: {}
  redis_2_data: {}
  redis_3_data: {}
  redis_4_data: {}
  redis_5_data: {}
  redis_6_data: {}